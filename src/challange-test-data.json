{"data":{"replContent":"function minimalBasketPrice(maxPrice, vendorsDelivery, vendorsProducts) { } ","instructions":"hardcodewriting4000Jet is building a new feature designed to significantly reduce order delivery times. However, faster delivery sometimes means higher shipping fees, and for cost-conscious customers this might be a problem. Your task is to implement a function that finds the fastest delivery time for a given order, taking into account that the customer doesn't want to pay more than maxPrice.\nConsider a customer's basket of items. You are given a list of available vendors from which you can order these items. For each vendor you know the products they provide with their price (vendorProducts) and the time it will take to deliver them (vendorsDelivery). Find the vendors that should be chosen so that the total price of items in the basket is not greater than the maxPrice, while keeping delivery time to a minimum. The delivery time is the maximum delivery time of all chosen vendors.\nYou should only choose vendors you're going to buy something from. It is guaranteed that there is always exactly one solution.\nExample\nFor maxPrice = 7, vendorsDelivery = [5, 4, 2, 3], and\nvendorsProducts = [[1, 1, 1],\n                   [3, -1, 3],\n                   [-1, 2, 2],\n                   [5, -1, -1]]\n\nthe output should be\nminimalBasketPrice(maxPrice, vendorsDelivery, vendorsProducts) = [1, 2].\nThere are three items in the basket, so here is the list of options:\n\nalthough vendor 0 can provide all items for the lowest price, it will take 5 days to deliver them;\nvendors 1 and 2 can deliver all items in 4 and 2 days respectively, so in 4 days all of the items will have been delivered. It would cost 3 + 2 + 2 = 7 (note that the 2nd 0-based item is provided by both vendors, but since the price at vendor number 2 is lower, that's where we would purchase it);\nvendors 2 and 3 will deliver everything in just 3 days, but it would cost 2 + 2 + 5 = 9, which is too much.\n\nThus, vendors 1 and 2 should be chosen to fulfill the order.\nInput/Output\n\n\n[execution time limit] 4 seconds (js)\n\n\n[input] integer maxPrice\nThe maximum amount of money the customer is willing to pay.\nGuaranteed constraints:\n1 ≤ maxPrice ≤ 106.\n\n\n[input] array.integer vendorsDelivery\nFor each valid i, vendorsDelivery[i] is the number of days it will take the ith vendor to deliver the goods.\nGuaranteed constraints:\n1 ≤ vendorsDelivery.length ≤ 100,\n1 ≤ vendorsDelivery[i] ≤ 106 + 1.\n\n\n[input] array.array.integer vendorsProducts\nRectangular matrix with vendorsDelivery.length rows. The number of its columns equals the number of items in the basket.\nIf vendors[i][j] > 0, then the ith vendor provides the jth item, and it costs vendors[i][j].\nvendors[i][j] = -1 otherwise, which means that the ith vendor doesn't provide the jth item.\nGuaranteed constraints:\nvendorsProducts.length = vendorsDelivery.length,\n1 ≤ vendorsProducts[0].length ≤ 100,\n-1 ≤ vendorsProducts[i][j] ≤ 106.\n\n\n[output] array.integer\nA sorted array of 0-based indices of the vendors that should be chosen to fulfill the order.\nThe order is fulfilled if for each item j (0 ≤ j < vendors[0].length) there is a vendor which provides it.\n\n\n[JavaScript] Syntax Tips\n// Prints help message to the console\n// Returns a string\nfunction helloWorld(name) {\n    console.log(\"This prints to the console when you Run Tests\");\n    return \"Hello, \" + name;\n}\n\n\n","testCases":[{"rawText":"Test 1Input:maxPrice: 7vendorsDelivery: [5, 4, 2, 3]vendorsProducts:\n[[1,1,1], \n [3,-1,3], \n [-1,2,2], \n [5,-1,-1]]Expected Output:[1, 2]Click the \"Run Tests\" button to see output and console logs.","title":"Test 1"},{"rawText":"Test 2Input:maxPrice: 6vendorsDelivery: [1, 5, 10, 12]vendorsProducts:\n[[-1,-1,-1], \n [3,-1,-1], \n [-1,2,-1], \n [-1,-1,1]]Expected Output:[1, 2, 3]Click the \"Run Tests\" button to see output and console logs.","title":"Test 2"},{"rawText":"Test 3Input:maxPrice: 5vendorsDelivery: [5, 6]vendorsProducts:\n[[5], \n [6]]Expected Output:[0]Click the \"Run Tests\" button to see output and console logs.","title":"Test 3"},{"rawText":"Test 4Input:maxPrice: 1000000vendorsDelivery: [1000000]vendorsProducts: [[1000000]]Expected Output:[0]Click the \"Run Tests\" button to see output and console logs.","title":"Test 4"},{"rawText":"Test 5Input:maxPrice: 6vendorsDelivery: [100, 5, 10, 12]vendorsProducts:\n[[3,4,4], \n [4,4,4], \n [4,2,4], \n [4,4,1]]Expected Output:[0, 2, 3]Click the \"Run Tests\" button to see output and console logs.","title":"Test 5"},{"rawText":"Test 6Input:maxPrice: 10vendorsDelivery: [1]vendorsProducts: [[10]]Expected Output:[0]Click the \"Run Tests\" button to see output and console logs.","title":"Test 6"},{"rawText":"Test 7Hidden","title":"Test 7"},{"rawText":"Test 8Hidden","title":"Test 8"},{"rawText":"Test 9Hidden","title":"Test 9"},{"rawText":"Test 10Hidden","title":"Test 10"},{"rawText":"Test 11Hidden","title":"Test 11"}]}}
